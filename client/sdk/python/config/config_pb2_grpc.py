# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from config import config_pb2 as config_dot_config__pb2


class ConfigStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/config.Config/Get',
                request_serializer=config_dot_config__pb2.GetRequest.SerializeToString,
                response_deserializer=config_dot_config__pb2.GetResponse.FromString,
                )
        self.Set = channel.unary_unary(
                '/config.Config/Set',
                request_serializer=config_dot_config__pb2.SetRequest.SerializeToString,
                response_deserializer=config_dot_config__pb2.SetResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/config.Config/Delete',
                request_serializer=config_dot_config__pb2.DeleteRequest.SerializeToString,
                response_deserializer=config_dot_config__pb2.DeleteResponse.FromString,
                )
        self.Read = channel.unary_unary(
                '/config.Config/Read',
                request_serializer=config_dot_config__pb2.ReadRequest.SerializeToString,
                response_deserializer=config_dot_config__pb2.ReadResponse.FromString,
                )


class ConfigServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Read(self, request, context):
        """These methods are here for backwards compatibility reasons
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConfigServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=config_dot_config__pb2.GetRequest.FromString,
                    response_serializer=config_dot_config__pb2.GetResponse.SerializeToString,
            ),
            'Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Set,
                    request_deserializer=config_dot_config__pb2.SetRequest.FromString,
                    response_serializer=config_dot_config__pb2.SetResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=config_dot_config__pb2.DeleteRequest.FromString,
                    response_serializer=config_dot_config__pb2.DeleteResponse.SerializeToString,
            ),
            'Read': grpc.unary_unary_rpc_method_handler(
                    servicer.Read,
                    request_deserializer=config_dot_config__pb2.ReadRequest.FromString,
                    response_serializer=config_dot_config__pb2.ReadResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'config.Config', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Config(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/config.Config/Get',
            config_dot_config__pb2.GetRequest.SerializeToString,
            config_dot_config__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/config.Config/Set',
            config_dot_config__pb2.SetRequest.SerializeToString,
            config_dot_config__pb2.SetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/config.Config/Delete',
            config_dot_config__pb2.DeleteRequest.SerializeToString,
            config_dot_config__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Read(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/config.Config/Read',
            config_dot_config__pb2.ReadRequest.SerializeToString,
            config_dot_config__pb2.ReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
