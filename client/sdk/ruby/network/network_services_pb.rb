# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: network/network.proto for package 'network'

require 'grpc'
require 'network/network_pb'

module Network
  module Network
    # Network service is usesd to gain visibility into networks
    class Service

      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'network.Network'

      # Connect to the network
      rpc :Connect, ::Network::ConnectRequest, ::Network::ConnectResponse
      # Returns the entire network graph
      rpc :Graph, ::Network::GraphRequest, ::Network::GraphResponse
      # Returns a list of known nodes in the network
      rpc :Nodes, ::Network::NodesRequest, ::Network::NodesResponse
      # Returns a list of known routes in the network
      rpc :Routes, ::Network::RoutesRequest, ::Network::RoutesResponse
      # Returns a list of known services based on routes
      rpc :Services, ::Network::ServicesRequest, ::Network::ServicesResponse
      # Status returns network status
      rpc :Status, ::Network::StatusRequest, ::Network::StatusResponse
    end

    Stub = Service.rpc_stub_class
  end
end
